---

# prepare list of ssl-certs to be deployed

- name: build deploy_certs list 1/3
  set_fact:
    deploy_certs_tmp: []
  tags: reverseproxy

- name: build deploy_certs list 2/3
  set_fact:
    deploy_certs_tmp: "{{ deploy_certs_tmp | union( [  item.ssl.cert_file|default(false), item.ssl.cert_key_file|default(false), item.ssl.cert_chain_file|default(false), item.ssl.cert_sign_file|default(false)  ] ) }}"
  with_items: "{{ webserver_reverseproxy }}"
  when: (item.ssl is defined) and (item.ssl.cert_file is defined)
  tags: reverseproxy

- name: build deploy_certs list 3/3
  set_fact:
    deploy_certs: "{{ deploy_certs_tmp|select()|list }}"
  tags: reverseproxy

- name: cert dir
  file: 
    path: /etc/ssl-site-certs/ 
    owner: root 
    group: root 
    mode: 0755 
    state: directory
  tags: reverseproxy

- name: deploy certs
  copy: 
    dest: "/etc/ssl-site-certs/{{ item }}" 
    src: "../../../certs/{{ item }}" 
    owner: root 
    group: root 
    mode: 0400
  with_items: "{{ deploy_certs }}"
  notify:
    - restart apache
  tags: reverseproxy

- name: create certbot well-known dir
  file: 
    path: /var/www/html/certbot 
    state: directory 
    owner: root 
    group: root

- name: install certbot certs
  include: certbot.yml
  with_items: "{{ webserver_reverseproxy | default([]) }}"
  when: (site.ssl is defined) and (site.ssl.cert_bot is defined) and (site.ssl.cert_bot)
  loop_control:
    loop_var: site
---

# in case this is run a second time, we must first stop and disable the systemd service

- name: disable container service
  systemd:
    state: stopped
    enabled: false
    name: "container-{{ container_item.name }}"
  ignore_errors: yes

- name: container uids
  set_fact:
    uid_begin: "{{ container_item.uid_offset }}"
    uid_end: "{{ (container_item.uid_offset+65536)|int }}"

- name: uid for container
  raw: usermod --add-subuids {{ uid_begin }}-{{ uid_end }} root
- name: gid for container
  raw: usermod --add-subgids {{ uid_begin }}-{{ uid_end }} root

- name: create mount points 1/2
  file:
    state: "directory"
    path: "{{ mount_item.source_path }}"
    owner: "{{ container_item.uid_offset }}"
    group: "{{ container_item.uid_offset }}"
  with_items: "{{ container_item.mount | default([]) }}"
  loop_control:
    loop_var: "mount_item"

- name: create mount points 2/2
  file:
    state: "directory"
    path: "/var/lib/lxc/{{ container_item.name }}/rootfs{{ mount_item.target_path }}"
    owner: "{{ container_item.uid_offset }}"
    group: "{{ container_item.uid_offset }}"
  with_items: "{{ container_item.mount | default([]) }}"
  loop_control:
    loop_var: "mount_item"

- name: container cfg file
  template: 
    dest: "/etc/lxc/{{ container_item.name }}.conf" 
    src: "container.spawn.conf.j2"

- name: create barebone container
  command: lxc-create -f /etc/lxc/{{ container_item.name }}.conf --name {{ container_item.name }} --template download -- --release bullseye --arch amd64 --dist debian --no-validate
  args:
    creates: "/var/lib/lxc/{{ container_item.name }}/config"
  register: container_created

- name: container config
  template:
    dest: "/var/lib/lxc/{{ container_item.name }}/config"
    src: "container.conf.j2"

- name: network interfaces
  template:
    dest: "/var/lib/lxc/{{ container_item.name }}/rootfs/etc/network/interfaces"
    src: "network.interfaces.j2"
    owner: "{{ uid_begin }}"
    group: "{{ uid_begin }}"
    mode: "0755"

- name: restart container
  lxc_container:
    name: "{{ container_item.name }}"
    state: restarted

- name: resolvconf place
  template:
    dest: "/var/lib/lxc/{{ container_item.name }}/rootfs/etc/resolv.conf"
    src: templates/resolv.conf.j2
    owner: "{{ uid_begin }}"
    group: "{{ uid_begin }}"
    mode: "0755"
    
- name: prepare container packages via lxc-attach
  command: lxc-attach -n {{ container_item.name }} -- {{ item }}
  with_items:
    - "apt-get update"
    - "apt-get install -y libterm-ui-perl openssh-server sudo python3 python3-apt"

- name: restart container
  lxc_container:
    name: "{{ container_item.name }}"
    state: restarted

- name: prepare container user via lxc-attach
  command: lxc-attach -n {{ container_item.name }} -- useradd -p {{ lxc_defaults.config_user.password_encrypted }} -s /bin/bash -m {{ lxc_defaults.config_user.name }}
  args:
    creates: /var/lib/lxc/{{ container_item.name }}/rootfs/home/{{ lxc_defaults.config_user.name }}

- name: prepare container user via lxc-attach
  command: lxc-attach -n {{ container_item.name }} -- usermod -a -G sudo {{ lxc_defaults.config_user.name }}

- name: add admin users public keys to container
  authorized_key:
    user: "{{ lxc_defaults.config_user.name }}"
    key: "{{ item }}"
    path: "/var/lib/lxc/{{ container_item.name }}/rootfs/home/{{ lxc_defaults.config_user.name }}/.ssh/authorized_keys"
  with_items: "{{ lxc_defaults.config_user.public_keys | default([]) }}"

- name: ownership of .ssh/authorized_keys
  file:
    path: "/var/lib/lxc/{{ container_item.name }}/rootfs/home/{{ lxc_defaults.config_user.name }}/.ssh"
    owner: "{{ uid_begin }}"
    group: "{{ uid_begin }}"
    mode: "0755"
    recurse: yes

- name: systemd service file
  template:
    dest: "/etc/systemd/system/container-{{ container_item.name }}.service"
    src: templates/container.service.j2

- name: daemon-reload systemctl
  raw: systemctl daemon-reload

- name: stop container
  lxc_container:
    name: "{{ container_item.name }}"
    state: stopped

- name: start container service
  systemd:
    state: started
    enabled: true
    name: "container-{{ container_item.name }}"
